---
// components
import Button from "@components/Button/Button.astro";
---

<div
  class=`group max-w-xl relative h-full w-full rounded-2xl bg-gradient-to-br from-primary-400 via-base-300/70 to-base-300/70
  dark:from-primary-500 dark:via-base-300/50 dark:to-base-300/50
  after:absolute after:rounded-[calc(1rem-1px)] after:bg-base-100/30 dark:after:bg-base-800/50 after:inset-[1px]`
>
  <!-- background glow -->
  <div
    class="absolute left-0 top-0 -z-10 mx-auto aspect-square w-[60%] bg-primary-600/70 blur-3xl"
  >
  </div>
  <div id="notification" class="fixed right-5 top-5 flex flex-col space-y-2 z-50"></div>

  <!-- center card -->
  <div class="relative z-10 p-1">
    <div class="rounded-xl bg-base-100 px-4 py-10 dark:bg-base-800">
      <h1 class="h2">Contact Us</h1>
      <p class="description mt-6">
        Let us help you find the right plan for your business.
      </p>

      <p class="description mt-2 text-sm">
        Inputs marked with <span class="text-primary-600 dark:text-primary-400"
          >*</span
        > are required.
      </p>
      <form
        id="contact-form"
        name="contact form"
        class="mt-8 flex flex-col gap-4 text-start"
      >
        <input type="hidden" name="form-name" value="contact" />
        <div>
          <div class="grid gap-4 xs:grid-cols-2">
            <div>
              <label
                for="contact__fname"
                class="text-sm opacity-90 dark:opacity-80">First Name</label
              >
              <input
                type="text"
                class="form__input mt-0.5"
                name="contact__fname"
                id="contact__fname"
                placeholder="Your first name"
                autofocus
              />
            </div>

            <div>
              <label
                for="contact__lname"
                class="text-sm opacity-90 dark:opacity-80">Last Name</label
              >
              <input
                type="text"
                class="form__input mt-0.5"
                name="contact__lname"
                id="contact__lname"
                placeholder="Your last name"
              />
            </div>
          </div>
        </div>
        <div>
          <label
            for="contact__company"
            class="text-sm opacity-90 dark:opacity-80">Company</label
          >
          <input
            type="text"
            class="form__input mt-0.5"
            name="contact__company"
            id="contact__company"
            placeholder="Your company or organization name"
          />
        </div>
        <div>
          <label for="contact__email" class="text-sm opacity-90 dark:opacity-80"
            >Email <span class="text-primary-600 dark:text-primary-400">*</span>
          </label>
          <input
            type="email"
            class="form__input mt-0.5"
            name="contact__email"
            id="contact__email"
            inputmode="email"
            placeholder="Your preferred contact email"
            required
          />
        </div>
        <div>
          <label
            for="contact__message"
            class="text-sm opacity-90 dark:opacity-80"
            >Message <span class="text-primary-600 dark:text-primary-400"
              >*</span
            >
          </label>
          <textarea
            name="contact__message"
            class="form__input mt-0.5"
            id="contact__message"
            rows="4"
            placeholder="How can we help?"
            required></textarea>
        </div>
        <Button variant="primary" type="submit" class="mt-1">Submit</Button>
      </form>
    </div>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("contact-form");
    const submitButton = form.querySelector("button[type='submit']");  // Ensure your button is correctly targeted
    const notificationContainer = document.getElementById("notification");

    function showNotification(message, success = true) {
      const notification = document.createElement('div');
      notification.className = `p-4 w-64 rounded-lg shadow-lg text-white ${success ? 'bg-green-500' : 'bg-red-500'}`;
      notification.textContent = message;
      notificationContainer.appendChild(notification);
      setTimeout(() => {
        notificationContainer.removeChild(notification);
        submitButton.disabled = false;  // Re-enable the button after showing the notification
        submitButton.classList.remove('cursor-not-allowed', 'opacity-50');  // Make the button look clickable again
      }, 5000);
    }

    if (form instanceof HTMLFormElement) {
      form.addEventListener("submit", async function (event) {
        event.preventDefault();
        submitButton.disabled = true;  // Disable the button immediately when the form is submitted
        submitButton.classList.add('cursor-not-allowed', 'opacity-50');  // Make the button look disabled
        const formData = new FormData(form);
        const response = await fetch("/api/sendmail", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(Object.fromEntries(formData.entries())),
        });

        if (response.ok) {
          showNotification("Thank you for your message. We will be in touch soon!");
          form.reset();
        } else {
          showNotification("Failed to send message. Please try again later.", false);
        }
      });
    } else {
      console.error("Form element not found or is not a form!");
    }
  });
</script>
